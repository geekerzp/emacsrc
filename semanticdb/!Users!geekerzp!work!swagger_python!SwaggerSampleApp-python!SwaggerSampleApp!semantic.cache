;; Object SwaggerSampleApp/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "SwaggerSampleApp/"
  :tables (list 
   (semanticdb-table "PetApi.py"
    :major-mode 'python-mode
    :tags 
        '( ("\"\"\"
WordAPI.py
Copyright 2014 Wordnik, Inc.

   Licensed under the Apache License, Version 2.0 (the \"License\");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an \"AS IS\" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
\"\"\"" code nil nil [23 729])
            ("sys" include nil nil [730 740])
            ("os" include nil nil [741 750])
            ("pprint" include nil nil [751 764])
            ("models" include nil nil [766 786])
            ("PetApi" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [853 879]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [829 833])
                            ("apiClient" variable nil (reparse-symbol function_parameters) [835 844]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [816 880])
                    ("deletePet" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [901 905])
                            ("token" variable nil (reparse-symbol function_parameters) [907 912])
                            ("petId" variable nil (reparse-symbol function_parameters) [914 919])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [921 929]))                          
                        :documentation "Deletes a pet

        Args:
            token, str: OAuth2 auentication (required)

            petId, str: Pet id to delete (required)



        Returns:
        ")
                        (reparse-symbol indented_block_body) [887 2292])
                    ("getPetById" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2316 2320])
                            ("petId" variable nil (reparse-symbol function_parameters) [2322 2327])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [2329 2337]))                          
                        :documentation "Find pet by ID

        Args:
            petId, long: ID of pet that needs to be fetched (required)



        Returns: Pet
        ")
                        (reparse-symbol indented_block_body) [2301 3723])
                    ("updatePetWithForm" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3753 3757])
                            ("token" variable nil (reparse-symbol function_parameters) [3759 3764])
                            ("petId" variable nil (reparse-symbol function_parameters) [3766 3771])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [3773 3781]))                          
                        :documentation "Updates a pet in the store with form data

        Args:
            token, str: OAuth2 auentication (required)

            petId, str: ID of pet that needs to be updated (required)

            name, str: Updated name of the pet (optional)

            status, str: Updated status of the pet (optional)



        Returns:
        ")
                        (reparse-symbol indented_block_body) [3731 5500])
                    ("partialUpdate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5527 5531])
                            ("token" variable nil (reparse-symbol function_parameters) [5533 5538])
                            ("petId" variable nil (reparse-symbol function_parameters) [5540 5545])
                            ("body" variable nil (reparse-symbol function_parameters) [5547 5551])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [5553 5561]))                          
                        :documentation "partial updates to a pet

        Args:
            token, str: OAuth2 auentication (required)

            petId, str: ID of pet that needs to be fetched (required)

            body, Pet: Pet object that needs to be added to the store (required)



        Returns: Pet
        ")
                        (reparse-symbol indented_block_body) [5509 7262])
                    ("addPet" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7281 7285])
                            ("token" variable nil (reparse-symbol function_parameters) [7287 7292])
                            ("body" variable nil (reparse-symbol function_parameters) [7294 7298])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [7300 7308]))                          
                        :documentation "Add a new pet to the store

        Args:
            token, str: OAuth2 auentication (required)

            body, Pet: Pet object that needs to be added to the store (required)



        Returns:
        ")
                        (reparse-symbol indented_block_body) [7270 9004]))                  
                :type "class")
                nil [789 8799])
            ("postData" variable nil nil [8807 8859])
            ("response" variable nil nil [8869 9003]))          
    :file "PetApi.py"
    :pointmax 14265
    :fsize 14264
    :lastmodtime '(21555 64575 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "__init__.py"
    :major-mode 'python-mode
    :tags 
        '( ("\"\"\"Add all of the modules in the current directory to __all__\"\"\"" code nil nil [23 87])
            ("os" include nil nil [88 97])
            ("sys" include nil nil [98 108])
            ("__all__" variable nil nil [110 122])
            ("for" code nil nil [124 270])
            ("get_modules" function
               (:documentation "
    Load modules from files in a directory.
    For the api files and model files set the modname as the key
    and the class as the value.
    So we can call the api class and model class by SwaggerSampleApp.PetApi()
    or SwaggerSampleApp.Pet()
    For the swagger file set the modname as the key
    and the module as the value.
    So we can call the swagger module by SwaggerSampleApp.swagger.ApiClient().
    "
                :arguments 
                  ( ("directory" variable nil (reparse-symbol function_parameters) [288 297]))                  )
                nil [272 1141])
            ("return" code nil nil [1126 1140])
            ("current_dir" variable nil nil [1429 1485])
            ("globals" code nil nil [1486 1528])
            ("globals" code nil nil [1529 1595]))          
    :file "__init__.py"
    :pointmax 1596
    :fsize 1595
    :lastmodtime '(21546 59385 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "swagger.py"
    :major-mode 'python-mode
    :tags 
        '( ("\"\"\"Wordnik.com's Swagger generic API client. This client handles the client-
server communication, and is invariant across implementations. Specifics of
the methods and models for each application are generated from the Swagger
templates.\"\"\"" code nil nil [23 264])
            ("sys" include nil nil [266 276])
            ("os" include nil nil [277 286])
            ("re" include nil nil [287 296])
            ("urllib" include nil nil [297 310])
            ("urllib2" include nil nil [311 325])
            ("httplib" include nil nil [326 340])
            ("json" include nil nil [341 352])
            ("datetime" include nil nil [353 368])
            ("pprint" include nil nil [369 382])
            ("models" include nil nil [384 404])
            ("ApiClient" type
               (:documentation "Generic API client for Swagger client library builds"
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [549 687])
                            ("self" variable nil (reparse-symbol indented_block_body) [695 715])
                            ("self" variable nil (reparse-symbol indented_block_body) [724 750])
                            ("self" variable nil (reparse-symbol indented_block_body) [759 777]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [505 509])
                            ("apiKey" variable nil (reparse-symbol function_parameters) [511 517])
                            ("apiServer" variable nil (reparse-symbol function_parameters) [524 533]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [492 778])
                    ("callAPI" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [795 799])
                            ("resourcePath" variable nil (reparse-symbol function_parameters) [801 813])
                            ("method" variable nil (reparse-symbol function_parameters) [815 821])
                            ("queryParams" variable nil (reparse-symbol function_parameters) [823 834])
                            ("postData" variable nil (reparse-symbol function_parameters) [836 844])
                            ("headerParams" variable nil (reparse-symbol function_parameters) [862 874]))                          )
                        (reparse-symbol indented_block_body) [783 3395])
                    ("toPathValue" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3416 3420])
                            ("obj" variable nil (reparse-symbol function_parameters) [3422 3425]))                          
                        :documentation "Convert a string or object to a path-friendly value
        Args:
            obj -- object or string value
        Returns:
            string -- quoted value
        ")
                        (reparse-symbol indented_block_body) [3400 3744])
                    ("sanitizeForSerialization" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3778 3782])
                            ("obj" variable nil (reparse-symbol function_parameters) [3784 3787]))                          
                        :documentation "Dump an object into JSON for POSTing.")
                        (reparse-symbol indented_block_body) [3749 4828])
                    ("deserialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4849 4853])
                            ("obj" variable nil (reparse-symbol function_parameters) [4855 4858])
                            ("objClass" variable nil (reparse-symbol function_parameters) [4860 4868]))                          
                        :documentation "Derialize a JSON string into an object.

        Args:
            obj -- string or object to be deserialized
            objClass -- class literal for deserialzied object, or string
                of class name
        Returns:
            object -- deserialized object")
                        (reparse-symbol indented_block_body) [4833 7799]))                  
                :type "class")
                nil [407 7799])
            ("MethodRequest" type
               (:superclasses ("urllib2.Request")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"Construct a MethodRequest. Usage is the same as for
        `urllib2.Request` except it also takes an optional `method`
        keyword argument. If supplied, `method` will be used instead of
        the default.\"\"\"" code nil (reparse-symbol indented_block_body) [7471 7689])
                            ("if" code nil (reparse-symbol indented_block_body) [7699 7769])
                            ("return" code nil (reparse-symbol indented_block_body) [7777 7831]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7857 7861])
                            ("args" variable nil (reparse-symbol function_parameters) [7863 7868])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [7870 7878]))                          
                        :documentation "Construct a MethodRequest. Usage is the same as for
        `urllib2.Request` except it also takes an optional `method`
        keyword argument. If supplied, `method` will be used instead of
        the default."
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [7844 8250])
                    ("get_method" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8270 8274]))                          )
                        (reparse-symbol indented_block_body) [8255 8350]))                  
                :type "class")
                nil [7801 8350]))          
    :file "swagger.py"
    :pointmax 8350
    :fsize 8349
    :lastmodtime '(21555 63983 0 0)
    :unmatched-syntax 'nil
    )
   )
  :file "!Users!geekerzp!work!swagger_python!SwaggerSampleApp-python!SwaggerSampleApp!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
