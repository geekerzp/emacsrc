;; Object SwaggerSampleApp/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "SwaggerSampleApp/"
  :tables (list 
   (semanticdb-table "__init__.py"
    :major-mode 'python-mode
    :tags 
        '( ("\"\"\"Add all of the modules in the current directory to __all__\"\"\"" code nil nil [23 87])
            ("os" include nil nil [88 97])
            ("sys" include nil nil [98 108])
            ("__all__" variable nil nil [110 122])
            ("for" code nil nil [124 270])
            ("get_modules" function
               (:documentation "
    Load modules from files in a directory.
    For the api files and model files set the modname as the key
    and the class as the value.
    So we can call the api class and model class by SwaggerSampleApp.PetApi()
    or SwaggerSampleApp.Pet()
    For the swagger file set the modname as the key
    and the module as the value.
    So we can call the swagger module by SwaggerSampleApp.swagger.ApiClient().
    "
                :arguments 
                  ( ("directory" variable nil (reparse-symbol function_parameters) [288 297]))                  )
                nil [272 1168])
            ("current_dir" variable nil nil [1456 1512])
            ("globals" code nil nil [1513 1555])
            ("globals" code nil nil [1556 1622]))          
    :file "__init__.py"
    :pointmax 1623
    :fsize 1143
    :lastmodtime '(21556 65470 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "PetApi.py"
    :major-mode 'python-mode
    :tags 
        '( ("\"\"\"
WordAPI.py
Copyright 2014 Wordnik, Inc.

   Licensed under the Apache License, Version 2.0 (the \"License\");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an \"AS IS\" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
\"\"\"" code nil nil [23 729])
            ("sys" include nil nil [730 740])
            ("os" include nil nil [741 750])
            ("models" include nil nil [752 772])
            ("PetApi" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [839 865]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [815 819])
                            ("apiClient" variable nil (reparse-symbol function_parameters) [821 830]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [802 866])
                    ("deletePet" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [887 891])
                            ("token" variable nil (reparse-symbol function_parameters) [893 898])
                            ("petId" variable nil (reparse-symbol function_parameters) [900 905])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [907 915]))                          
                        :documentation "Deletes a pet

        Args:
            token, str: OAuth2 auentication (required)

            petId, str: Pet id to delete (required)



        Returns:
        ")
                        (reparse-symbol indented_block_body) [873 2278])
                    ("getPetById" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2302 2306])
                            ("petId" variable nil (reparse-symbol function_parameters) [2308 2313])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [2315 2323]))                          
                        :documentation "Find pet by ID

        Args:
            petId, long: ID of pet that needs to be fetched (required)



        Returns: Pet
        ")
                        (reparse-symbol indented_block_body) [2287 3709])
                    ("updatePetWithForm" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3739 3743])
                            ("token" variable nil (reparse-symbol function_parameters) [3745 3750])
                            ("petId" variable nil (reparse-symbol function_parameters) [3752 3757])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [3759 3767]))                          
                        :documentation "Updates a pet in the store with form data

        Args:
            token, str: OAuth2 auentication (required)

            petId, str: ID of pet that needs to be updated (required)

            name, str: Updated name of the pet (optional)

            status, str: Updated status of the pet (optional)



        Returns:
        ")
                        (reparse-symbol indented_block_body) [3717 5486])
                    ("partialUpdate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5513 5517])
                            ("token" variable nil (reparse-symbol function_parameters) [5519 5524])
                            ("petId" variable nil (reparse-symbol function_parameters) [5526 5531])
                            ("body" variable nil (reparse-symbol function_parameters) [5533 5537])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [5539 5547]))                          
                        :documentation "partial updates to a pet

        Args:
            token, str: OAuth2 auentication (required)

            petId, str: ID of pet that needs to be fetched (required)

            body, Pet: Pet object that needs to be added to the store (required)



        Returns: Pet
        ")
                        (reparse-symbol indented_block_body) [5495 7258])
                    ("addPet" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7277 7281])
                            ("token" variable nil (reparse-symbol function_parameters) [7283 7288])
                            ("body" variable nil (reparse-symbol function_parameters) [7290 7294])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [7296 7304]))                          
                        :documentation "Add a new pet to the store

        Args:
            token, str: OAuth2 auentication (required)

            body, Pet: Pet object that needs to be added to the store (required)



        Returns:
        ")
                        (reparse-symbol indented_block_body) [7266 8530])
                    ("updatePet" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8553 8557])
                            ("body" variable nil (reparse-symbol function_parameters) [8559 8563])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [8565 8573]))                          
                        :documentation "Update an existing pet

        Args:
            body, Pet: Pet object that needs to be updated in the store (required)



        Returns:
        ")
                        (reparse-symbol indented_block_body) [8539 9649])
                    ("findPetsByStatus" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9679 9683])
                            ("status" variable nil (reparse-symbol function_parameters) [9685 9691])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [9693 9701]))                          
                        :documentation "Finds Pets by status

        Args:
            status, str: Status values that need to be considered for filter (required)



        Returns: Array[Pet]
        ")
                        (reparse-symbol indented_block_body) [9658 11012])
                    ("findPetsByTags" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11039 11043])
                            ("tags" variable nil (reparse-symbol function_parameters) [11045 11049])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [11051 11059]))                          
                        :documentation "Finds Pets by tags

        Args:
            tags, str: Tags to filter by (required)



        Returns: Array[Pet]
        ")
                        (reparse-symbol indented_block_body) [11020 12320])
                    ("uploadFile" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12343 12347])
                            ("token" variable nil (reparse-symbol function_parameters) [12349 12354])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [12356 12364]))                          
                        :documentation "uploads an image

        Args:
            token, str: OAuth2 auentication (required)

            additionalMetadata, str: Additional data to pass to server (optional)

            file, File: file to upload (optional)



        Returns:
        ")
                        (reparse-symbol indented_block_body) [12328 13798]))                  
                :type "class")
                nil [775 13798]))          
    :file "PetApi.py"
    :pointmax 13790
    :fsize 13797
    :lastmodtime '(21557 21761 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "swagger.py"
    :major-mode 'python-mode
    :tags 
        '( ("\"\"\"Wordnik.com's Swagger generic API client. This client handles the client-
server communication, and is invariant across implementations. Specifics of
the methods and models for each application are generated from the Swagger
templates.\"\"\"" code nil nil [23 264])
            ("sys" include nil nil [266 276])
            ("os" include nil nil [277 286])
            ("re" include nil nil [287 296])
            ("urllib" include nil nil [297 310])
            ("urllib2" include nil nil [311 325])
            ("httplib" include nil nil [326 340])
            ("json" include nil nil [341 352])
            ("datetime" include nil nil [353 368])
            ("models" include nil nil [370 390])
            ("ApiClient" type
               (:documentation "Generic API client for Swagger client library builds"
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [684 704])
                            ("self" variable nil (reparse-symbol indented_block_body) [713 739])
                            ("self" variable nil (reparse-symbol indented_block_body) [748 766]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [491 495])
                            ("apiKey" variable nil (reparse-symbol function_parameters) [497 503])
                            ("apiServer" variable nil (reparse-symbol function_parameters) [510 519]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [478 767])
                    ("callAPI" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [784 788])
                            ("resourcePath" variable nil (reparse-symbol function_parameters) [790 802])
                            ("method" variable nil (reparse-symbol function_parameters) [804 810])
                            ("queryParams" variable nil (reparse-symbol function_parameters) [812 823])
                            ("postData" variable nil (reparse-symbol function_parameters) [825 833])
                            ("headerParams" variable nil (reparse-symbol function_parameters) [851 863]))                          )
                        (reparse-symbol indented_block_body) [772 2645])
                    ("toPathValue" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2666 2670])
                            ("obj" variable nil (reparse-symbol function_parameters) [2672 2675]))                          
                        :documentation "Convert a string or object to a path-friendly value
        Args:
            obj -- object or string value
        Returns:
            string -- quoted value
        ")
                        (reparse-symbol indented_block_body) [2650 2994])
                    ("sanitizeForSerialization" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3028 3032])
                            ("obj" variable nil (reparse-symbol function_parameters) [3034 3037]))                          
                        :documentation "Dump an object into JSON for POSTing.")
                        (reparse-symbol indented_block_body) [2999 4078])
                    ("deserialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4099 4103])
                            ("obj" variable nil (reparse-symbol function_parameters) [4105 4108])
                            ("objClass" variable nil (reparse-symbol function_parameters) [4110 4118]))                          
                        :documentation "Derialize a JSON string into an object.

        Args:
            obj -- string or object to be deserialized
            objClass -- class literal for deserialzied object, or string
                of class name
        Returns:
            object -- deserialized object")
                        (reparse-symbol indented_block_body) [4083 7049]))                  
                :type "class")
                nil [393 7049])
            ("MethodRequest" type
               (:superclasses ("urllib2.Request")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"Construct a MethodRequest. Usage is the same as for
        `urllib2.Request` except it also takes an optional `method`
        keyword argument. If supplied, `method` will be used instead of
        the default.\"\"\"" code nil (reparse-symbol indented_block_body) [7139 7357])
                            ("if" code nil (reparse-symbol indented_block_body) [7367 7437])
                            ("return" code nil (reparse-symbol indented_block_body) [7445 7499]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7107 7111])
                            ("args" variable nil (reparse-symbol function_parameters) [7113 7118])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [7120 7128]))                          
                        :documentation "Construct a MethodRequest. Usage is the same as for
        `urllib2.Request` except it also takes an optional `method`
        keyword argument. If supplied, `method` will be used instead of
        the default."
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [7094 7500])
                    ("get_method" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7520 7524]))                          )
                        (reparse-symbol indented_block_body) [7505 7600]))                  
                :type "class")
                nil [7051 7600]))          
    :file "swagger.py"
    :pointmax 7600
    :fsize 7599
    :lastmodtime '(21557 64876 0 0)
    :unmatched-syntax 'nil
    )
   )
  :file "!Users!geekerzp!work!qna_base1!lib!scripts!swagger-petstore-python!sample-app!SwaggerSampleApp!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
