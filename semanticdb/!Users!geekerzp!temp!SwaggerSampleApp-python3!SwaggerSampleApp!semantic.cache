;; Object SwaggerSampleApp/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "SwaggerSampleApp/"
  :tables (list 
   (semanticdb-table "swagger.py"
    :major-mode 'python-mode
    :tags 
        '( ("\"\"\"Wordnik.com's Swagger generic API client. This client handles the client-
server communication, and is invariant across implementations. Specifics of
the methods and models for each application are generated from the Swagger
templates.\"\"\"" code nil nil [23 264])
            ("sys" include nil nil [266 276])
            ("os" include nil nil [277 286])
            ("re" include nil nil [287 296])
            ("urllib.request" include nil nil [297 346])
            ("urllib.error" include nil nil [297 346])
            ("urllib.parse" include nil nil [297 346])
            ("http.client" include nil nil [347 365])
            ("json" include nil nil [366 377])
            ("datetime" include nil nil [378 393])
            ("ApiClient" type
               (:documentation "Generic API client for Swagger client library builds"
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [561 699])
                            ("self" variable nil (reparse-symbol indented_block_body) [707 727])
                            ("self" variable nil (reparse-symbol indented_block_body) [736 762])
                            ("self" variable nil (reparse-symbol indented_block_body) [771 789]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [517 521])
                            ("apiKey" variable nil (reparse-symbol function_parameters) [523 529])
                            ("apiServer" variable nil (reparse-symbol function_parameters) [536 545]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [504 790])
                    ("callAPI" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [807 811])
                            ("resourcePath" variable nil (reparse-symbol function_parameters) [813 825])
                            ("method" variable nil (reparse-symbol function_parameters) [827 833])
                            ("queryParams" variable nil (reparse-symbol function_parameters) [835 846])
                            ("postData" variable nil (reparse-symbol function_parameters) [848 856])
                            ("headerParams" variable nil (reparse-symbol function_parameters) [874 886]))                          )
                        (reparse-symbol indented_block_body) [795 2658])
                    ("toPathValue" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2679 2683])
                            ("obj" variable nil (reparse-symbol function_parameters) [2685 2688]))                          
                        :documentation "Convert a string or object to a path-friendly value
        Args:
            obj -- object or string value
        Returns:
            string -- quoted value
        ")
                        (reparse-symbol indented_block_body) [2663 3019])
                    ("sanitizeForSerialization" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3053 3057])
                            ("obj" variable nil (reparse-symbol function_parameters) [3059 3062]))                          
                        :documentation "Dump an object into JSON for POSTing.")
                        (reparse-symbol indented_block_body) [3024 3736])
                    ("deserialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3757 3761])
                            ("obj" variable nil (reparse-symbol function_parameters) [3763 3766])
                            ("objClass" variable nil (reparse-symbol function_parameters) [3768 3776]))                          
                        :documentation "Derialize a JSON string into an object.

        Args:
            obj -- string or object to be deserialized
            objClass -- class literal for deserialzied object, or string
                of class name
        Returns:
            object -- deserialized object")
                        (reparse-symbol indented_block_body) [3741 6632]))                  
                :type "class")
                nil [419 6632])
            ("MethodRequest" type
               (:superclasses ("urllib.request.Request")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"Construct a MethodRequest. Usage is the same as for
        `urllib.Request` except it also takes an optional `method`
        keyword argument. If supplied, `method` will be used instead of
        the default.\"\"\"" code nil (reparse-symbol indented_block_body) [6729 6946])
                            ("if" code nil (reparse-symbol indented_block_body) [6956 7026])
                            ("return" code nil (reparse-symbol indented_block_body) [7034 7095]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6697 6701])
                            ("args" variable nil (reparse-symbol function_parameters) [6703 6708])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [6710 6718]))                          
                        :documentation "Construct a MethodRequest. Usage is the same as for
        `urllib.Request` except it also takes an optional `method`
        keyword argument. If supplied, `method` will be used instead of
        the default."
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [6684 7096])
                    ("get_method" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7116 7120]))                          )
                        (reparse-symbol indented_block_body) [7101 7203]))                  
                :type "class")
                nil [6634 7203]))          
    :file "swagger.py"
    :pointmax 7204
    :fsize 7203
    :lastmodtime '(21530 33748 0 0)
    :unmatched-syntax '((IMPORT 408 . 414) (MULT 415 . 416) (FROM 395 . 399) (PERIOD 400 . 401))
    )
   (semanticdb-table "PetApi.py"
    :major-mode 'python-mode
    :tags 
        '( ("\"\"\"
WordAPI.py
Copyright 2014 Wordnik, Inc.

   Licensed under the Apache License, Version 2.0 (the \"License\");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an \"AS IS\" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
\"\"\"" code nil nil [23 729])
            ("sys" include nil nil [730 740])
            ("os" include nil nil [741 750])
            ("PetApi" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [840 866]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [816 820])
                            ("apiClient" variable nil (reparse-symbol function_parameters) [822 831]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [803 867])
                    ("updatePetWithForm" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [900 904])
                            ("petId" variable nil (reparse-symbol function_parameters) [906 911])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [913 921]))                          
                        :documentation "Updates a pet in the store with form data

        Args:
            petId, str: ID of pet that needs to be updated (required)

            name, str: Updated name of the pet (optional)

            status, str: Updated status of the pet (optional)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [878 2189])
                    ("partialUpdate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2232 2236])
                            ("petId" variable nil (reparse-symbol function_parameters) [2238 2243])
                            ("body" variable nil (reparse-symbol function_parameters) [2245 2249])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [2251 2259]))                          
                        :documentation "partial updates to a pet

        Args:
            petId, str: ID of pet that needs to be fetched (required)

            body, Pet: Pet object that needs to be added to the store (required)

            

        Returns: Array[Pet]
        ")
                        (reparse-symbol indented_block_body) [2214 3624])
                    ("getPetById" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3663 3667])
                            ("petId" variable nil (reparse-symbol function_parameters) [3669 3674])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [3676 3684]))                          
                        :documentation "Find pet by ID

        Args:
            petId, int: ID of pet that needs to be fetched (required)

            

        Returns: Pet
        ")
                        (reparse-symbol indented_block_body) [3648 4930])
                    ("deletePet" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4968 4972])
                            ("petId" variable nil (reparse-symbol function_parameters) [4974 4979])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [4981 4989]))                          
                        :documentation "Deletes a pet

        Args:
            petId, str: Pet id to delete (required)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [4954 6065])
                    ("addPet" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6101 6105])
                            ("body" variable nil (reparse-symbol function_parameters) [6107 6111])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [6113 6121]))                          
                        :documentation "Add a new pet to the store

        Args:
            body, Pet: Pet object that needs to be added to the store (required)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [6090 6988])
                    ("updatePet" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7027 7031])
                            ("body" variable nil (reparse-symbol function_parameters) [7033 7037])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [7039 7047]))                          
                        :documentation "Update an existing pet

        Args:
            body, Pet: Pet object that needs to be updated in the store (required)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [7013 7914])
                    ("uploadFile" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7954 7958])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [7960 7968]))                          
                        :documentation "uploads an image

        Args:
            additionalMetadata, str: Additional data to pass to server (optional)

            file, File: file to upload (optional)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [7939 8915])
                    ("findPetsByStatus" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8961 8965])
                            ("status" variable nil (reparse-symbol function_parameters) [8967 8973])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [8975 8983]))                          
                        :documentation "Finds Pets by status

        Args:
            status, str: Status values that need to be considered for filter (required)

            

        Returns: Array[Pet]
        ")
                        (reparse-symbol indented_block_body) [8940 10156])
                    ("findPetsByTags" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10199 10203])
                            ("tags" variable nil (reparse-symbol function_parameters) [10205 10209])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [10211 10219]))                          
                        :documentation "Finds Pets by tags

        Args:
            tags, str: Tags to filter by (required)

            

        Returns: Array[Pet]
        ")
                        (reparse-symbol indented_block_body) [10180 11342]))                  
                :type "class")
                nil [776 11342]))          
    :file "PetApi.py"
    :pointmax 11371
    :fsize 11370
    :lastmodtime '(21530 33748 0 0)
    :unmatched-syntax '((IMPORT 765 . 771) (MULT 772 . 773) (FROM 752 . 756) (PERIOD 757 . 758))
    )
   )
  :file "!Users!geekerzp!temp!SwaggerSampleApp-python3!SwaggerSampleApp!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
