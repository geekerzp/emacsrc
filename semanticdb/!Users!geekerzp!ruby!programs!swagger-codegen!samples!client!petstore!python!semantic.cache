;; Object python/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "python/"
  :tables (list 
   (semanticdb-table "swagger.py"
    :major-mode 'python-mode
    :tags 
        '( ("\"\"\"Wordnik.com's Swagger generic API client. This client handles the client-
server communication, and is invariant across implementations. Specifics of
the methods and models for each application are generated from the Swagger
templates.\"\"\"" code nil nil [23 264])
            ("sys" include nil nil [266 276])
            ("os" include nil nil [277 286])
            ("re" include nil nil [287 296])
            ("urllib" include nil nil [297 310])
            ("urllib2" include nil nil [311 325])
            ("httplib" include nil nil [326 340])
            ("json" include nil nil [341 352])
            ("datetime" include nil nil [353 368])
            ("models" include nil nil [370 390])
            ("ApiClient" type
               (:documentation "Generic API client for Swagger client library builds"
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [535 673])
                            ("self" variable nil (reparse-symbol indented_block_body) [681 701])
                            ("self" variable nil (reparse-symbol indented_block_body) [710 736])
                            ("self" variable nil (reparse-symbol indented_block_body) [745 763]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [491 495])
                            ("apiKey" variable nil (reparse-symbol function_parameters) [497 503])
                            ("apiServer" variable nil (reparse-symbol function_parameters) [510 519]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [478 764])
                    ("callAPI" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [781 785])
                            ("resourcePath" variable nil (reparse-symbol function_parameters) [787 799])
                            ("method" variable nil (reparse-symbol function_parameters) [801 807])
                            ("queryParams" variable nil (reparse-symbol function_parameters) [809 820])
                            ("postData" variable nil (reparse-symbol function_parameters) [822 830])
                            ("headerParams" variable nil (reparse-symbol function_parameters) [848 860]))                          )
                        (reparse-symbol indented_block_body) [769 2502])
                    ("toPathValue" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2523 2527])
                            ("obj" variable nil (reparse-symbol function_parameters) [2529 2532]))                          
                        :documentation "Convert a string or object to a path-friendly value
        Args:
            obj -- object or string value
        Returns:
            string -- quoted value
        ")
                        (reparse-symbol indented_block_body) [2507 2851])
                    ("sanitizeForSerialization" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2885 2889])
                            ("obj" variable nil (reparse-symbol function_parameters) [2891 2894]))                          
                        :documentation "Dump an object into JSON for POSTing.")
                        (reparse-symbol indented_block_body) [2856 3935])
                    ("deserialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3956 3960])
                            ("obj" variable nil (reparse-symbol function_parameters) [3962 3965])
                            ("objClass" variable nil (reparse-symbol function_parameters) [3967 3975]))                          
                        :documentation "Derialize a JSON string into an object.

        Args:
            obj -- string or object to be deserialized
            objClass -- class literal for deserialzied object, or string
                of class name
        Returns:
            object -- deserialized object")
                        (reparse-symbol indented_block_body) [3940 6906]))                  
                :type "class")
                nil [393 6906])
            ("MethodRequest" type
               (:superclasses ("urllib2.Request")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"Construct a MethodRequest. Usage is the same as for
        `urllib2.Request` except it also takes an optional `method`
        keyword argument. If supplied, `method` will be used instead of
        the default.\"\"\"" code nil (reparse-symbol indented_block_body) [6996 7214])
                            ("if" code nil (reparse-symbol indented_block_body) [7224 7294])
                            ("return" code nil (reparse-symbol indented_block_body) [7302 7356]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6964 6968])
                            ("args" variable nil (reparse-symbol function_parameters) [6970 6975])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [6977 6985]))                          
                        :documentation "Construct a MethodRequest. Usage is the same as for
        `urllib2.Request` except it also takes an optional `method`
        keyword argument. If supplied, `method` will be used instead of
        the default."
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [6951 7357])
                    ("get_method" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7377 7381]))                          )
                        (reparse-symbol indented_block_body) [7362 7457]))                  
                :type "class")
                nil [6908 7457]))          
    :file "swagger.py"
    :pointmax 7459
    :fsize 7458
    :lastmodtime '(21530 34175 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "PetApi.py"
    :major-mode 'python-mode
    :tags 
        '( ("\"\"\"
WordAPI.py
Copyright 2014 Wordnik, Inc.

   Licensed under the Apache License, Version 2.0 (the \"License\");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an \"AS IS\" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
\"\"\"" code nil nil [23 729])
            ("sys" include nil nil [730 740])
            ("os" include nil nil [741 750])
            ("models" include nil nil [752 772])
            ("PetApi" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [839 865]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [815 819])
                            ("apiClient" variable nil (reparse-symbol function_parameters) [821 830]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [802 866])
                    ("getPetById" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [892 896])
                            ("petId" variable nil (reparse-symbol function_parameters) [898 903])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [905 913]))                          
                        :documentation "Find pet by ID

        Args:
            petId, long: ID of pet that needs to be fetched (required)

            

        Returns: Pet
        ")
                        (reparse-symbol indented_block_body) [877 2164])
                    ("deletePet" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2202 2206])
                            ("petId" variable nil (reparse-symbol function_parameters) [2208 2213])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [2215 2223]))                          
                        :documentation "Deletes a pet

        Args:
            petId, str: Pet id to delete (required)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [2188 3303])
                    ("partialUpdate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3346 3350])
                            ("petId" variable nil (reparse-symbol function_parameters) [3352 3357])
                            ("body" variable nil (reparse-symbol function_parameters) [3359 3363])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [3365 3373]))                          
                        :documentation "partial updates to a pet

        Args:
            petId, str: ID of pet that needs to be fetched (required)

            body, Pet: Pet object that needs to be added to the store (required)

            

        Returns: Array[Pet]
        ")
                        (reparse-symbol indented_block_body) [3328 4742])
                    ("updatePetWithForm" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4788 4792])
                            ("petId" variable nil (reparse-symbol function_parameters) [4794 4799])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [4801 4809]))                          
                        :documentation "Updates a pet in the store with form data

        Args:
            petId, str: ID of pet that needs to be updated (required)

            name, str: Updated name of the pet (optional)

            status, str: Updated status of the pet (optional)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [4766 6081])
                    ("uploadFile" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6121 6125])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [6127 6135]))                          
                        :documentation "uploads an image

        Args:
            additionalMetadata, str: Additional data to pass to server (optional)

            body, File: file to upload (optional)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [6106 7086])
                    ("addPet" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7122 7126])
                            ("body" variable nil (reparse-symbol function_parameters) [7128 7132])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [7134 7142]))                          
                        :documentation "Add a new pet to the store

        Args:
            body, Pet: Pet object that needs to be added to the store (required)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [7111 8013])
                    ("updatePet" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8052 8056])
                            ("body" variable nil (reparse-symbol function_parameters) [8058 8062])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [8064 8072]))                          
                        :documentation "Update an existing pet

        Args:
            body, Pet: Pet object that needs to be updated in the store (required)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [8038 8943])
                    ("findPetsByStatus" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8989 8993])
                            ("status" variable nil (reparse-symbol function_parameters) [8995 9001])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [9009 9017]))                          
                        :documentation "Finds Pets by status

        Args:
            status, str: Status values that need to be considered for filter (required)

            

        Returns: Array[Pet]
        ")
                        (reparse-symbol indented_block_body) [8968 10194])
                    ("findPetsByTags" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10237 10241])
                            ("tags" variable nil (reparse-symbol function_parameters) [10243 10247])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [10249 10257]))                          
                        :documentation "Finds Pets by tags

        Args:
            tags, str: Tags to filter by (required)

            

        Returns: Array[Pet]
        ")
                        (reparse-symbol indented_block_body) [10218 11384]))                  
                :type "class")
                nil [775 11384]))          
    :file "PetApi.py"
    :pointmax 11413
    :fsize 11412
    :lastmodtime '(21530 34175 0 0)
    :unmatched-syntax 'nil
    )
   )
  :file "!Users!geekerzp!ruby!programs!swagger-codegen!samples!client!petstore!python!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
