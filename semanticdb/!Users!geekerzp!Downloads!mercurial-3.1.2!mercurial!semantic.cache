;; Object mercurial/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "mercurial/"
  :tables (list 
   (semanticdb-table "ancestor.py"
    :major-mode 'python-mode
    :tags 
        '( ("heapq" include nil nil [250 262])
            ("util" include nil nil [263 274])
            ("node" include nil nil [275 299])
            ("commonancestorsheads" function
               (:documentation "Returns a set with the heads of all common ancestors of all nodes,
    heads(::nodes[0] and ::nodes[1] and ...) .

    pfunc must return a list of parent vertices for a given vertex.
    "
                :arguments 
                  ( ("pfunc" variable nil (reparse-symbol function_parameters) [326 331])
                    ("nodes" variable nil (reparse-symbol function_parameters) [333 339]))                  )
                nil [301 1861])
            ("ancestors" function
               (:documentation "
    Returns the common ancestors of a and b that are furthest from a
    root (as measured by longest path).

    pfunc must return a list of parent vertices for a given vertex.
    "
                :arguments 
                  ( ("pfunc" variable nil (reparse-symbol function_parameters) [1876 1881])
                    ("orignodes" variable nil (reparse-symbol function_parameters) [1883 1893]))                  )
                nil [1862 3963])
            ("missingancestors" function
               (:documentation "Return all the ancestors of revs that are not ancestors of bases.

    This may include elements from revs.

    Equivalent to the revset (::revs - ::bases). Revs are returned in
    revision number order, which is a topological order.

    revs and bases should both be iterables. pfunc must return a list of
    parent revs for a given revs.
    "
                :arguments 
                  ( ("revs" variable nil (reparse-symbol function_parameters) [3985 3989])
                    ("bases" variable nil (reparse-symbol function_parameters) [3991 3996])
                    ("pfunc" variable nil (reparse-symbol function_parameters) [3998 4003]))                  )
                nil [3964 6933])
            ("lazyancestors" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"Create a new object generating ancestors for the given revs. Does
        not generate revs lower than stoprev.

        This is computed lazily starting from revs. The object supports
        iteration and membership.

        cl should be a changelog and revs should be an iterable. inclusive is
        a boolean that indicates whether revs should be included. Revs lower
        than stoprev will not be generated.

        Result does not include the null revision.\"\"\"" code nil (reparse-symbol indented_block_body) [7033 7509])
                            ("self" variable nil (reparse-symbol indented_block_body) [7518 7550])
                            ("self" variable nil (reparse-symbol indented_block_body) [7559 7580])
                            ("self" variable nil (reparse-symbol indented_block_body) [7589 7612])
                            ("self" variable nil (reparse-symbol indented_block_body) [7621 7648])
                            ("self" variable nil (reparse-symbol indented_block_body) [8014 8058])
                            ("heapq" code nil (reparse-symbol indented_block_body) [8067 8101])
                            ("if" code nil (reparse-symbol indented_block_body) [8110 8220]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6980 6984])
                            ("cl" variable nil (reparse-symbol function_parameters) [6986 6988])
                            ("revs" variable nil (reparse-symbol function_parameters) [6990 6994])
                            ("stoprev" variable nil (reparse-symbol function_parameters) [6996 7003])
                            ("inclusive" variable nil (reparse-symbol function_parameters) [7007 7016]))                          
                        :documentation "Create a new object generating ancestors for the given revs. Does
        not generate revs lower than stoprev.

        This is computed lazily starting from revs. The object supports
        iteration and membership.

        cl should be a changelog and revs should be an iterable. inclusive is
        a boolean that indicates whether revs should be included. Revs lower
        than stoprev will not be generated.

        Result does not include the null revision."
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [6967 8220])
                    ("__iter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8238 8242]))                          
                        :documentation "Generate the ancestors of _initrevs in reverse topological order.

        If inclusive is False, yield a sequence of revision numbers starting
        with the parents of each revision in revs, i.e., each revision is *not*
        considered an ancestor of itself.  Results are in breadth-first order:
        parents of each rev in revs, then parents of those, etc.

        If inclusive is True, yield all the revs first (ignoring stoprev),
        then yield all the ancestors of revs as when inclusive is False.
        If an element in revs is an ancestor of a different rev it is not
        yielded again.")
                        (reparse-symbol indented_block_body) [8225 9390])
                    ("__contains__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9412 9416])
                            ("target" variable nil (reparse-symbol function_parameters) [9418 9424]))                          
                        :documentation "Test whether target is an ancestor of self._initrevs.")
                        (reparse-symbol indented_block_body) [9395 10487]))                  
                :type "class")
                nil [6934 10487]))          
    :file "ancestor.py"
    :pointmax 10487
    :fsize 10486
    :lastmodtime '(21557 31760 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "util.py"
    :file "util.py"
    :fsize 65919
    :lastmodtime '(21548 23756 0 0)
    )
   (semanticdb-table "node.py"
    :file "node.py"
    :fsize 449
    :lastmodtime '(21548 23756 0 0)
    )
   )
  :file "!Users!geekerzp!Downloads!mercurial-3.1.2!mercurial!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
