;; Object SwaggerSampleApp/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "SwaggerSampleApp/"
  :tables (list 
   (semanticdb-table "__init__.py"
    :major-mode 'python-mode
    :tags 
        '( ("\"\"\"Add all of the modules in the current directory to __all__\"\"\"" code nil nil [23 87])
            ("os" include nil nil [88 97])
            ("sys" include nil nil [98 108])
            ("__all__" variable nil nil [110 122])
            ("for" code nil nil [124 270])
            ("get_modules" function
               (:documentation "
    Load modules from files in a directory.
    For the api files and model files set the modname as the key
    and the class as the value.
    "
                :arguments 
                  ( ("directory" variable nil (reparse-symbol function_parameters) [288 297]))                  )
                nil [272 869])
            ("current_dir" variable nil nil [977 1033])
            ("globals" code nil nil [1034 1076])
            ("globals" code nil nil [1077 1143]))          
    :file "__init__.py"
    :pointmax 1144
    :fsize 1143
    :lastmodtime '(21584 19132 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "PetApi.py"
    :major-mode 'python-mode
    :tags 
        '( ("\"\"\"
WordAPI.py
Copyright 2014 Wordnik, Inc.

   Licensed under the Apache License, Version 2.0 (the \"License\");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an \"AS IS\" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
\"\"\"" code nil nil [23 729])
            ("sys" include nil nil [730 740])
            ("os" include nil nil [741 750])
            ("models" include nil nil [752 772])
            ("PetApi" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [839 865]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [815 819])
                            ("apiClient" variable nil (reparse-symbol function_parameters) [821 830]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [802 866])
                    ("find_pets_by_tags" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [899 903])
                            ("token" variable nil (reparse-symbol function_parameters) [905 910])
                            ("tags" variable nil (reparse-symbol function_parameters) [912 916])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [918 926]))                          
                        :documentation "Finds Pets by tags

        Args:
            token, str: API key or token for authorization (required)

            tags, str: Tags to filter by (required)

            

        Returns: list[Pet]
        ")
                        (reparse-symbol indented_block_body) [877 2365])
                    ("get_pet_by_id" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2407 2411])
                            ("token" variable nil (reparse-symbol function_parameters) [2413 2418])
                            ("petId" variable nil (reparse-symbol function_parameters) [2420 2425])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [2427 2435]))                          
                        :documentation "Find pet by ID

        Args:
            token, str: API key or token for authorization (required)

            petId, long: ID of pet that needs to be fetched (required)

            

        Returns: Pet
        ")
                        (reparse-symbol indented_block_body) [2389 4000])
                    ("delete_pet" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4039 4043])
                            ("token" variable nil (reparse-symbol function_parameters) [4045 4050])
                            ("petId" variable nil (reparse-symbol function_parameters) [4052 4057])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [4059 4067]))                          
                        :documentation "Deletes a pet

        Args:
            token, str: API key or token for authorization (required)

            petId, str: Pet id to delete (required)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [4024 5459])
                    ("partial_update" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5503 5507])
                            ("token" variable nil (reparse-symbol function_parameters) [5509 5514])
                            ("petId" variable nil (reparse-symbol function_parameters) [5516 5521])
                            ("body" variable nil (reparse-symbol function_parameters) [5523 5527])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [5529 5537]))                          
                        :documentation "partial updates to a pet

        Args:
            token, str: API key or token for authorization (required)

            petId, str: ID of pet that needs to be fetched (required)

            body, Pet: Pet object that needs to be added to the store (required)

            

        Returns: list[Pet]
        ")
                        (reparse-symbol indented_block_body) [5484 7286])
                    ("update_pet_with_form" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7335 7339])
                            ("token" variable nil (reparse-symbol function_parameters) [7341 7346])
                            ("petId" variable nil (reparse-symbol function_parameters) [7348 7353])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [7355 7363]))                          
                        :documentation "Updates a pet in the store with form data

        Args:
            token, str: API key or token for authorization (required)

            petId, str: ID of pet that needs to be updated (required)

            name, str: Updated name of the pet (optional)

            status, str: Updated status of the pet (optional)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [7310 9113])
                    ("add_pet" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9150 9154])
                            ("token" variable nil (reparse-symbol function_parameters) [9156 9161])
                            ("body" variable nil (reparse-symbol function_parameters) [9163 9167])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [9169 9177]))                          
                        :documentation "Add a new pet to the store

        Args:
            token, str: API key or token for authorization (required)

            body, Pet: Pet object that needs to be added to the store (required)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [9138 10430])
                    ("update_pet" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10470 10474])
                            ("token" variable nil (reparse-symbol function_parameters) [10476 10481])
                            ("body" variable nil (reparse-symbol function_parameters) [10483 10487])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [10489 10497]))                          
                        :documentation "Update an existing pet

        Args:
            token, str: API key or token for authorization (required)

            body, Pet: Pet object that needs to be updated in the store (required)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [10455 11750])
                    ("find_pets_by_status" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11799 11803])
                            ("token" variable nil (reparse-symbol function_parameters) [11805 11810])
                            ("status" variable nil (reparse-symbol function_parameters) [11812 11818])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [11820 11828]))                          
                        :documentation "Finds Pets by status

        Args:
            token, str: API key or token for authorization (required)

            status, str: Status values that need to be considered for filter (required)

            

        Returns: list[Pet]
        ")
                        (reparse-symbol indented_block_body) [11775 13317])
                    ("upload_file" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13357 13361])
                            ("token" variable nil (reparse-symbol function_parameters) [13363 13368])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [13370 13378]))                          
                        :documentation "uploads an image

        Args:
            token, str: API key or token for authorization (required)

            additionalMetadata, str: Additional data to pass to server (optional)

            file, File: file to upload (optional)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [13341 14841]))                  
                :type "class")
                nil [775 14841]))          
    :file "PetApi.py"
    :pointmax 14871
    :fsize 14870
    :lastmodtime '(21584 19132 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "UserApi.py"
    :major-mode 'python-mode
    :tags 
        '( ("\"\"\"
WordAPI.py
Copyright 2014 Wordnik, Inc.

   Licensed under the Apache License, Version 2.0 (the \"License\");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an \"AS IS\" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
\"\"\"" code nil nil [23 729])
            ("sys" include nil nil [730 740])
            ("os" include nil nil [741 750])
            ("models" include nil nil [752 772])
            ("UserApi" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [840 866]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [816 820])
                            ("apiClient" variable nil (reparse-symbol function_parameters) [822 831]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [803 867])
                    ("createUser" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [893 897])
                            ("body" variable nil (reparse-symbol function_parameters) [899 903])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [905 913]))                          
                        :documentation "Create user

        Args:
            body, User: Created user object (required)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [878 1913])
                    ("createUsersWithArrayInput" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1968 1972])
                            ("body" variable nil (reparse-symbol function_parameters) [1974 1978])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [1980 1988]))                          
                        :documentation "Creates list of users with given input array

        Args:
            body, list[User]: List of user object (required)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [1938 3058])
                    ("createUsersWithListInput" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3112 3116])
                            ("body" variable nil (reparse-symbol function_parameters) [3118 3122])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [3124 3132]))                          
                        :documentation "Creates list of users with given list input

        Args:
            body, list[User]: List of user object (required)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [3083 4199])
                    ("updateUser" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4239 4243])
                            ("username" variable nil (reparse-symbol function_parameters) [4245 4253])
                            ("body" variable nil (reparse-symbol function_parameters) [4255 4259])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [4261 4269]))                          
                        :documentation "Updated user

        Args:
            username, str: name that need to be deleted (required)

            body, User: Updated user object (required)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [4224 5606])
                    ("deleteUser" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5646 5650])
                            ("username" variable nil (reparse-symbol function_parameters) [5652 5660])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [5662 5670]))                          
                        :documentation "Delete user

        Args:
            username, str: The name that needs to be deleted (required)

            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [5631 6950])
                    ("getUserByName" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6993 6997])
                            ("username" variable nil (reparse-symbol function_parameters) [6999 7007])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [7009 7017]))                          
                        :documentation "Get user by user name

        Args:
            username, str: The name that needs to be fetched. Use user1 for testing. (required)

            

        Returns: User
        ")
                        (reparse-symbol indented_block_body) [6975 8486])
                    ("loginUser" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8524 8528])
                            ("username" variable nil (reparse-symbol function_parameters) [8530 8538])
                            ("password" variable nil (reparse-symbol function_parameters) [8540 8548])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [8550 8558]))                          
                        :documentation "Logs user into the system

        Args:
            username, str: The user name for login (required)

            password, str: The password for login in clear text (required)

            

        Returns: str
        ")
                        (reparse-symbol indented_block_body) [8510 10068])
                    ("logoutUser" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10107 10111])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [10113 10121]))                          
                        :documentation "Logs out current logged in user session

        Args:
            

        Returns: 
        ")
                        (reparse-symbol indented_block_body) [10092 11093]))                  
                :type "class")
                nil [775 11093]))          
    :file "UserApi.py"
    :pointmax 11123
    :fsize 12656
    :lastmodtime '(21584 19132 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "swagger.py"
    :major-mode 'python-mode
    :tags 
        '( ("\"\"\"Wordnik.com's Swagger generic API client. This client handles the client-
server communication, and is invariant across implementations. Specifics of
the methods and models for each application are generated from the Swagger
templates.\"\"\"" code nil nil [23 264])
            ("sys" include nil nil [266 276])
            ("os" include nil nil [277 286])
            ("re" include nil nil [287 296])
            ("urllib" include nil nil [297 310])
            ("urllib2" include nil nil [311 325])
            ("httplib" include nil nil [326 340])
            ("json" include nil nil [341 352])
            ("datetime" include nil nil [353 368])
            ("models" include nil nil [370 390])
            ("ApiClient" type
               (:documentation "Generic API client for Swagger client library builds"
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [672 690])
                            ("self" variable nil (reparse-symbol indented_block_body) [699 726])
                            ("self" variable nil (reparse-symbol indented_block_body) [735 753]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [491 495])
                            ("api_server" variable nil (reparse-symbol function_parameters) [497 507]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [478 754])
                    ("callAPI" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [771 775])
                            ("resourcePath" variable nil (reparse-symbol function_parameters) [777 789])
                            ("method" variable nil (reparse-symbol function_parameters) [791 797])
                            ("queryParams" variable nil (reparse-symbol function_parameters) [799 810])
                            ("postData" variable nil (reparse-symbol function_parameters) [812 820])
                            ("headerParams" variable nil (reparse-symbol function_parameters) [838 850]))                          )
                        (reparse-symbol indented_block_body) [759 2632])
                    ("toPathValue" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2653 2657])
                            ("obj" variable nil (reparse-symbol function_parameters) [2659 2662]))                          
                        :documentation "Convert a string or object to a path-friendly value
        Args:
            obj -- object or string value
        Returns:
            string -- quoted value
        ")
                        (reparse-symbol indented_block_body) [2637 2981])
                    ("sanitizeForSerialization" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3015 3019])
                            ("obj" variable nil (reparse-symbol function_parameters) [3021 3024]))                          
                        :documentation "Dump an object into JSON for POSTing.")
                        (reparse-symbol indented_block_body) [2986 4065])
                    ("deserialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4086 4090])
                            ("obj" variable nil (reparse-symbol function_parameters) [4092 4095])
                            ("objClass" variable nil (reparse-symbol function_parameters) [4097 4105]))                          
                        :documentation "Derialize a JSON string into an object.

        Args:
            obj -- string or object to be deserialized
            objClass -- class literal for deserialzied object, or string
                of class name
        Returns:
            object -- deserialized object")
                        (reparse-symbol indented_block_body) [4070 7036]))                  
                :type "class")
                nil [393 7036])
            ("MethodRequest" type
               (:superclasses ("urllib2.Request")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"Construct a MethodRequest. Usage is the same as for
        `urllib2.Request` except it also takes an optional `method`
        keyword argument. If supplied, `method` will be used instead of
        the default.\"\"\"" code nil (reparse-symbol indented_block_body) [7126 7344])
                            ("if" code nil (reparse-symbol indented_block_body) [7354 7424])
                            ("return" code nil (reparse-symbol indented_block_body) [7432 7486]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7094 7098])
                            ("args" variable nil (reparse-symbol function_parameters) [7100 7105])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [7107 7115]))                          
                        :documentation "Construct a MethodRequest. Usage is the same as for
        `urllib2.Request` except it also takes an optional `method`
        keyword argument. If supplied, `method` will be used instead of
        the default."
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [7081 7487])
                    ("get_method" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7507 7511]))                          )
                        (reparse-symbol indented_block_body) [7492 7587]))                  
                :type "class")
                nil [7038 7587]))          
    :file "swagger.py"
    :pointmax 7589
    :fsize 7588
    :lastmodtime '(21584 19132 0 0)
    :unmatched-syntax 'nil
    )
   )
  :file "!Users!geekerzp!temp!SwaggerSampleApp-python!SwaggerSampleApp!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
